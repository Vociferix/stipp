name: CI
on:
  push:
    branches: ['master']
  pull_request:
permissions:
  contents: read
  pages: write
  id-token: write
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
        - os: windows-latest
          c_compiler: cl
          cpp_compiler: cl
        - os: ubuntu-latest
          c_compiler: gcc
          cpp_compiler: g++
        - os: ubuntu-latest
          c_compiler: clang
          cpp_compiler: clang++
        exclude:
        - os: windows-latest
          c_compiler: gcc
        - os: windows-latest
          c_compiler: clang
        - os: ubuntu-latest
          c_compiler: cl
    steps:
    - uses: actions/checkout@v4
    - name: Set reusable things
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/tests/build" >> "$GITHUB_OUTPUT"
    - name: Install Clang
      if: ${{ matrix.os == 'ubuntu-latest' }}
      uses: KyleMayes/install-llvm-action@v2
      with:
        version: "17.0"
    - name: Install Cppcheck
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: |
        sudo apt -y install cppcheck
    - name: Configure
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_BUILD_TYPE=Release
        -DCLANG_TIDY_LINTS=${{ matrix.os == 'ubuntu-latest' && 'ON' || 'OFF' }}
        -DCPPCHECK_LINTS=${{ matrix.os == 'ubuntu-latest' && 'ON' || 'OFF' }}
        -DIWYU_LINTS=${{ matrix.os == 'ubuntu-latest' && 'ON' || 'OFF' }}
        -DWERROR=ON
        -S ${{ github.workspace }}/tests
    - name: Format Code
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: >
        cmake
        --build ${{ steps.strings.outputs.build-output-dir }}
        --config ${{ matrix.build_type }}
        --target format
    - name: Check Formatting
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: git diff --exit-code
    - name: Build
      run: >
        cmake
        --build ${{ steps.strings.outputs.build-output-dir }}
        --config ${{ matrix.build_type }}
        --target tests
    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}

